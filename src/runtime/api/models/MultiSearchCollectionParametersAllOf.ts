/* tslint:disable */
/* eslint-disable */
/**
 * Typesense API
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.24.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MultiSearchCollectionParametersAllOf
 */
export interface MultiSearchCollectionParametersAllOf {
    /**
     * The collection to search in.
     * @type {string}
     * @memberof MultiSearchCollectionParametersAllOf
     */
    collection: string;
}

/**
 * Check if a given object implements the MultiSearchCollectionParametersAllOf interface.
 */
export function instanceOfMultiSearchCollectionParametersAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "collection" in value;

    return isInstance;
}

export function MultiSearchCollectionParametersAllOfFromJSON(json: any): MultiSearchCollectionParametersAllOf {
    return MultiSearchCollectionParametersAllOfFromJSONTyped(json, false);
}

export function MultiSearchCollectionParametersAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultiSearchCollectionParametersAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collection': json['collection'],
    };
}

export function MultiSearchCollectionParametersAllOfToJSON(value?: MultiSearchCollectionParametersAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collection': value.collection,
    };
}

