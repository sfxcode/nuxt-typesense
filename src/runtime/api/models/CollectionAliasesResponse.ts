/* tslint:disable */
/* eslint-disable */
/**
 * Typesense API
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.24.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CollectionAlias } from './CollectionAlias';
import {
    CollectionAliasFromJSON,
    CollectionAliasFromJSONTyped,
    CollectionAliasToJSON,
} from './CollectionAlias';

/**
 * 
 * @export
 * @interface CollectionAliasesResponse
 */
export interface CollectionAliasesResponse {
    /**
     * 
     * @type {Array<CollectionAlias>}
     * @memberof CollectionAliasesResponse
     */
    aliases: Array<CollectionAlias>;
}

/**
 * Check if a given object implements the CollectionAliasesResponse interface.
 */
export function instanceOfCollectionAliasesResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "aliases" in value;

    return isInstance;
}

export function CollectionAliasesResponseFromJSON(json: any): CollectionAliasesResponse {
    return CollectionAliasesResponseFromJSONTyped(json, false);
}

export function CollectionAliasesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionAliasesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aliases': ((json['aliases'] as Array<any>).map(CollectionAliasFromJSON)),
    };
}

export function CollectionAliasesResponseToJSON(value?: CollectionAliasesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aliases': ((value.aliases as Array<any>).map(CollectionAliasToJSON)),
    };
}

