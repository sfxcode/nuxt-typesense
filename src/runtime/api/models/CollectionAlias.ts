/* tslint:disable */
/* eslint-disable */
/**
 * Typesense API
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.25.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CollectionAlias
 */
export interface CollectionAlias {
    /**
     * Name of the collection alias
     * @type {string}
     * @memberof CollectionAlias
     */
    readonly name: string;
    /**
     * Name of the collection the alias mapped to
     * @type {string}
     * @memberof CollectionAlias
     */
    collectionName: string;
}

/**
 * Check if a given object implements the CollectionAlias interface.
 */
export function instanceOfCollectionAlias(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "collectionName" in value;

    return isInstance;
}

export function CollectionAliasFromJSON(json: any): CollectionAlias {
    return CollectionAliasFromJSONTyped(json, false);
}

export function CollectionAliasFromJSONTyped(json: any, ignoreDiscriminator: boolean): CollectionAlias {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'collectionName': json['collection_name'],
    };
}

export function CollectionAliasToJSON(value?: CollectionAlias | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collection_name': value.collectionName,
    };
}

