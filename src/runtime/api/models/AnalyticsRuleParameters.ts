/* tslint:disable */
/* eslint-disable */
/**
 * Typesense API
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.25.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AnalyticsRuleParametersDestination } from './AnalyticsRuleParametersDestination';
import {
    AnalyticsRuleParametersDestinationFromJSON,
    AnalyticsRuleParametersDestinationFromJSONTyped,
    AnalyticsRuleParametersDestinationToJSON,
} from './AnalyticsRuleParametersDestination';
import type { AnalyticsRuleParametersSource } from './AnalyticsRuleParametersSource';
import {
    AnalyticsRuleParametersSourceFromJSON,
    AnalyticsRuleParametersSourceFromJSONTyped,
    AnalyticsRuleParametersSourceToJSON,
} from './AnalyticsRuleParametersSource';

/**
 * 
 * @export
 * @interface AnalyticsRuleParameters
 */
export interface AnalyticsRuleParameters {
    /**
     * 
     * @type {AnalyticsRuleParametersSource}
     * @memberof AnalyticsRuleParameters
     */
    source: AnalyticsRuleParametersSource;
    /**
     * 
     * @type {AnalyticsRuleParametersDestination}
     * @memberof AnalyticsRuleParameters
     */
    destination: AnalyticsRuleParametersDestination;
    /**
     * 
     * @type {number}
     * @memberof AnalyticsRuleParameters
     */
    limit: number;
}

/**
 * Check if a given object implements the AnalyticsRuleParameters interface.
 */
export function instanceOfAnalyticsRuleParameters(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "source" in value;
    isInstance = isInstance && "destination" in value;
    isInstance = isInstance && "limit" in value;

    return isInstance;
}

export function AnalyticsRuleParametersFromJSON(json: any): AnalyticsRuleParameters {
    return AnalyticsRuleParametersFromJSONTyped(json, false);
}

export function AnalyticsRuleParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsRuleParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'source': AnalyticsRuleParametersSourceFromJSON(json['source']),
        'destination': AnalyticsRuleParametersDestinationFromJSON(json['destination']),
        'limit': json['limit'],
    };
}

export function AnalyticsRuleParametersToJSON(value?: AnalyticsRuleParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source': AnalyticsRuleParametersSourceToJSON(value.source),
        'destination': AnalyticsRuleParametersDestinationToJSON(value.destination),
        'limit': value.limit,
    };
}

